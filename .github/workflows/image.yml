name: Image
on: [push]
permissions:
  deployments: write
  contents: write
  statuses: write
  actions: write
  checks: read
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Testing
        run: |
          git log

      - name: Update Image Tag in Helm Chart
        if: github.event_name != 'pull_request' && !contains(github.event.head_commit.message, '[AUTO]')
        run: |
          git_hash=$(git rev-parse --short "$GITHUB_SHA")
          version=$(cat ./charts/service/values.yaml | grep version: | awk '{print $2}')
          sed -i "s/$version/${GITHUB_REF##*/}-$git_hash/" ./charts/service/values.yaml
      
      - name: Commit and Push
        if: github.event_name != 'pull_request' && !contains(github.event.head_commit.message, '[AUTO]')
        run: |
          git config --global user.email "kjenney@gmail.com"
          git config --global user.name "Ken Jenney"
          git commit -a -m "[AUTO] Update tag version in helm values"
          git push


      # # Workaround: https://github.com/docker/build-push-action/issues/461
      # - name: Setup Docker buildx
      #   uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      # # Login against a Docker registry except on PR
      # # https://github.com/docker/login-action
      # - name: Log into registry ${{ env.REGISTRY }}
      #   if: github.event_name != 'pull_request'
      #   uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      # # Build and push Docker image with Buildx (don't push on PR)
      # # https://github.com/docker/build-push-action
      # - name: Build and push Docker image
      #   id: build-and-push
      #   uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
      #   with:
      #     context: .
      #     push: ${{ github.event_name != 'pull_request' }}
      #     tags: mastermindg/argocd-example-app:${{ github.sha }}
      #     labels: ${{ steps.meta.outputs.labels }}
      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max

      # - name: Update Image Tag in Helm Chart
      #   if: github.event_name != 'pull_request' && !contains(github.event.head_commit.message, '[AUTO]')
      #   run: |
      #     git_hash=$(git rev-parse --short "$GITHUB_SHA")
      #     version=$(cat ./charts/service/values.yaml | grep version: | awk '{print $2}')
      #     sed -i "s/$version/${GITHUB_REF##*/}-$git_hash/" ./charts/service/values.yaml

      # - name: 
